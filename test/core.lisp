(in-package #:cbor-tests)

(define-test core
  (setf *strict* t
        *string-to-symbol* nil
        *symbol-to-string* nil
        *dictionary-format* :hash
        *use-stringrefs* nil
        *use-sharedrefs* nil))

(define-test (core numbers)
  (t-decode "00" t 0)
  (t-decode "01" t 1)
  (t-decode "0a" t 10)
  (t-decode "17" t 23)
  (t-decode "1818" t 24)
  (t-decode "1819" t 25)
  (t-decode "1864" t 100)
  (t-decode "1903e8" t 1000)
  (t-decode "1a000f4240" t 1000000)
  (t-decode "1b000000e8d4a51000" t 1000000000000)
  (t-decode "1bffffffffffffffff" t 18446744073709551615)
  (t-decode "c249010000000000000000" t 18446744073709551616)
  (t-decode "3bffffffffffffffff" t -18446744073709551616)
  (t-decode "c349010000000000000000" t -18446744073709551617)
  (t-decode "20" t -1)
  (t-decode "29" t -10)
  (t-decode "3863" t -100)
  (t-decode "3903e7" t -1000)
  (t-decode "f90000" t 0.0)
  (t-decode "f98000" t -0.0)
  (t-decode "f93c00" t 1.0)
  (t-decode "fb3ff199999999999a" t 1.1d0)
  (t-decode "f93e00" t 1.5)
  (t-decode "f97bff" t 65504.0)
  (t-decode "fa47c35000" t 100000.0)
  (t-decode "fa7f7fffff" t 3.4028234663852886e+38)
  (t-decode "fb7e37e43c8800759c" t 1.0d300)
  (t-decode "f90001" t 5.960464477539063e-08)
  (t-decode "f90400" t 6.103515625e-05)
  (t-decode "f9c400" t -4.0)
  (t-decode "fbc010666666666666" t -4.1d0))

(define-test (core values)
  (t-decode "f4" nil nil) ;; false (no roundtrip - encoding it back produces null)
  (t-decode "f5" t t)     ;; true
  (t-decode "f6" t nil)   ;; null
  (t-decode "f7" nil nil) ;; undefined (no roundtrip)
  (t-decode "f0" t '(cbor::cbor-simple . 16))
  (t-decode "f818" t '(cbor::cbor-simple . 24))
  (t-decode "f8ff" t '(cbor::cbor-simple . 255))
  (t-decode-date "c074323031332d30332d32315432303a30343a30305a"
                  "2013-03-21T22:04:00.000000+02:00")
  (t-decode-date "c11a514b67b0" "2013-03-21T22:04:00.000000+02:00")
  (t-decode-date "c1fb41d452d9ec200000" "2013-03-21T22:04:00.500000+02:00")
  (t-decode "40" t #())
  (t-decode "4401020304" t #(1 2 3 4))
  (t-decode "60" t "")
  (t-decode "6161" t "a")
  (t-decode "6449455446" t "IETF")
  (t-decode "62225c" t "\"\\")
  (t-decode "62c3bc" t "√º")
  (t-decode "63e6b0b4" t "Ê∞¥")
  (t-decode "64f0908591" t "êÖë")
  (t-decode "80" t #())
  (t-decode "83010203" t #(1 2 3))
  (t-decode "8301820203820405" t #$[ 1, [ 2,3 ], [ 4,5 ] ])
  (t-decode "98190102030405060708090a0b0c0d0e0f101112131415161718181819" t
             #$[ 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25 ])
  (t-decode "a0" t #${})
  (let ((hash (make-hash-table :test #'equal)))
    (setf (gethash 1 hash) 2
          (gethash 3 hash) 4)
    (t-decode "a201020304" t hash))
  (t-decode "a26161016162820203" t #${ "a": 1, "b": [ 2, 3 ] })
  (t-decode "826161a161626163" t #$[ "a", { "b": "c" } ])
  (t-decode "a56161614161626142616361436164614461656145" t
             #${ "a": "A", "b": "B", "c": "C", "d": "D", "e": "E" })
  (t-decode "5f42010243030405ff" nil #(1 2 3 4 5))
  (t-decode "7f657374726561646d696e67ff" nil "streaming")
  (t-decode "9fff" nil #())
  (t-decode "9f018202039f0405ffff" nil #$[ 1, [ 2, 3 ], [ 4, 5 ] ])
  (t-decode "9f01820203820405ff" nil #$[ 1, [ 2, 3 ], [ 4, 5 ] ])
  (t-decode "83018202039f0405ff" nil #$[ 1, [ 2, 3 ], [ 4, 5 ] ])
  (t-decode "83019f0203ff820405" nil #$[ 1, [ 2, 3 ], [ 4, 5 ] ])
  (t-decode "9f0102030405060708090a0b0c0d0e0f101112131415161718181819ff" nil
             #$[ 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25 ])
  (t-decode "bf61610161629f0203ffff" nil #${ "a": 1, "b": [ 2, 3 ] })
  (t-decode "826161bf61626163ff" nil #$[ "a", { "b": "c" } ])
  (t-decode "bf6346756ef563416d7421ff" nil #${ "Fun": true, "Amt": -2 }))
